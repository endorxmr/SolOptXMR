name: linux-full

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

# The below variables reduce repetitions across similar targets
env:
  APT_SET_CONF: |
        echo "Acquire::Retries       \"3\";"   | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout  \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    env:
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        # Volatile cache
    - name: ccache
      uses: actions/cache@v3
      with:
        path: ~/.ccache
        key:          ccache01-${{ runner.os }}-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.linkage }}-build-${{ github.sha }}
        restore-keys: ccache01-${{ runner.os }}-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.linkage }}-build-
    # Less volatile cache
    - name: data cache
      uses: actions/cache@v3
      with:
        path: externals/tsqsim/build/data/data/txt
        key:          data-${{ hashFiles('externals/tsqsim/data/data/txt/**/*') }}
        restore-keys: data-${{ hashFiles('externals/tsqsim/data/data/txt/**/*') }}
    # Expendable, volatile & large cache
    - name: diff cache
      uses: actions/cache@v3
      with:
        path: /tmp/diff_XMR.pkl
        key: data-diff-01-${{ github.sha }}
        restore-keys: |
          data-diff-01-${{ github.sha }}
          data-diff-01
#    - name: deps cache
#      uses: actions/cache@v3
#      with:
#        path: build/deps/dload
#        key:          deps-${{ hashFiles('build/deps/dload/*') }}
#        restore-keys: deps-${{ hashFiles('build/deps/dload/*') }}
    # - name: Cache APT Packages
    #   # You may pin to the exact commit or the version.
    #   # uses: awalsh128/cache-apt-pkgs-action@1850ee53f6e706525805321a3f2f863dcf73c962
    #   # TODO: update when this gets resolved: https://github.com/awalsh128/cache-apt-pkgs-action/pull/104
    #   uses: awalsh128/cache-apt-pkgs-action@v1.3.0
    #   with:
    #     # Space delimited list of packages to install. Version can be specified optionally using APT command syntax of <name>=<version> (e.g. xdot=1.2-2).
    #     packages: at build-essential cmake ccache fswebcam gfortran gnuplot libboost-system-dev libboost-filesystem-dev libboost-iostreams-dev libboost-serialization-dev libboost-program-options-dev libboost-date-time-dev libboost-atomic-dev libeigen3-dev libffi-dev libgsl-dev libunittest++-dev libwxgtk3.0-gtk3-dev lm-sensors qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools r-base-dev rapidjson-dev python3-statsmodels python3-testresources
    #     version: 1.0
    - name: Cache pip packages
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip' # caching pip dependencies
    - run: pip install -r requirements.txt
    - name: prepare environment
      run: util/prep-env.sh
    - name: set apt conf
      run: ${{env.APT_SET_CONF}}
    - name: install dependencies
      run: util/deps-pull.sh
    - name: build & install the unmanaged dependencies
      run: util/deps-build.sh
    - name: Configure your rig
      run: util/config.sh
    - name: build generic
      run: ./util/ci.sh 1
    - uses: actions/upload-artifact@v3
      with:
        name: SolOptXMR-ubuntu-latest
        path: /home/runner/work/SolOptXMR/SolOptXMR/build/*.png
        
  test-ubuntu:
    needs: build-ubuntu
    runs-on: ubuntu-latest
    env:
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        # Volatile cache
    - name: ccache
      uses: actions/cache@v3
      with:
        path: ~/.ccache
        key:          ccache01-${{ runner.os }}-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.linkage }}-build-${{ github.sha }}
        restore-keys: ccache01-${{ runner.os }}-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.linkage }}-build-
    # Less volatile cache
    - name: data cache
      uses: actions/cache@v3
      with:
        path: externals/tsqsim/build/data/data/txt
        key:          data-${{ hashFiles('externals/tsqsim/data/data/txt/**/*') }}
        restore-keys: data-${{ hashFiles('externals/tsqsim/data/data/txt/**/*') }}
    # Expendable, volatile & large cache
    - name: diff cache
      uses: actions/cache@v3
      with:
        path: /tmp/diff_XMR.pkl
        key: data-diff-01-${{ github.sha }}
        restore-keys: |
          data-diff-01-${{ github.sha }}
          data-diff-01
#    - name: deps cache
#      uses: actions/cache@v3
#      with:
#        path: build/deps/dload
#        key:          deps-${{ hashFiles('build/deps/dload/*') }}
#        restore-keys: deps-${{ hashFiles('build/deps/dload/*') }}
    # - name: Cache APT Packages
    #   # You may pin to the exact commit or the version.
    #   # uses: awalsh128/cache-apt-pkgs-action@1850ee53f6e706525805321a3f2f863dcf73c962
    #   uses: awalsh128/cache-apt-pkgs-action@v1.3.0
    #   with:
    #     # Space delimited list of packages to install. Version can be specified optionally using APT command syntax of <name>=<version> (e.g. xdot=1.2-2).
    #     packages: at build-essential cmake ccache fswebcam gfortran gnuplot libboost-system-dev libboost-filesystem-dev libboost-iostreams-dev libboost-serialization-dev libboost-program-options-dev libboost-date-time-dev libboost-atomic-dev libeigen3-dev libffi-dev libgsl-dev libunittest++-dev libwxgtk3.0-gtk3-dev lm-sensors qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools r-base-dev rapidjson-dev python3-statsmodels python3-testresources
    #     version: 1.0
    - name: Cache pip packages
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip' # caching pip dependencies
    - name: prepare environment
      run: util/prep-env.sh
    - name: set apt conf
      run: ${{env.APT_SET_CONF}}
    - name: install dependencies
      run: util/deps-pull.sh
    - name: build & install the unmanaged dependencies
      run: util/deps-build.sh
    - name: Configure your rig
      run: util/config.sh
    - name: build generic
      run: ./util/ci.sh 1
    - name: Run production
      run: python3 ./src/prod.py
    - uses: actions/upload-artifact@v3
      with:
        name: SolOptXMR-ubuntu-latest
        path: /home/runner/work/SolOptXMR/SolOptXMR/build/*.png

